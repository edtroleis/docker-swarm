---
- hosts: docker_machines
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  connection: ssh

  vars_files:
    - vars/default.yml

  tasks:

    - name: "Update hostnames"
      hostname:
        name: "{{ ansible_host }}"
      become: true

    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        line: "{{ hostvars[item]['ansible_facts']['enp0s3']['ipv4']['address'] }} {{ hostvars[item].ansible_host }} {{item}}"
        insertbefore: BOF
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.docker_machines }}"

    - name: "Disable Ubuntu auto update package list"
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: 'APT::Periodic::Update-Package-Lists'
        line: 'APT::Periodic::Update-Package-Lists "0";'

    - name: Disable Ubuntu auto upgrade
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: 'APT::Periodic::Unattended-Upgrade'
        line: 'APT::Periodic::Unattended-Upgrade "0";'

    - name: Workaround issue Virtualbox shared folder permissions - permission denied
      user:
        name: "{{ docker_user }}"
        append: yes
        groups: vboxsf
      become: true
      with_items: "{{ docker_user }}"

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
        filename: docker
        mode: 0600

    - name: Install Docker Engine.
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Enable service docker, and enable persistently
      service:
        name: docker
        enabled: yes

    - name: Add Docker users
      user:
        name: "{{ docker_user }}"
        append: yes
        groups: "{{ docker_group }}"
      become: true
      with_items: "{{ docker_user }}"

    - name: Reboot all docker machines
      reboot:
        post_reboot_delay: 10
        reboot_timeout: 60
        connect_timeout: 100
        test_command: uptime
